version: '3.9'
    
configs:
  loki_config:
    file: ./infrastructure/loki/loki-config.yml
  prometheus_config:
    file: ./infrastructure/prometheus/prometheus-config.yml
  prometheus_alert_rules_config:
    file: ./infrastructure/prometheus/alert-rules.yml
  alert-manager_config:
    file: ./infrastructure/alert-manager/alert-manager-config.yml
  grafana_config:
    file: ./infrastructure/grafana/grafana.ini
  grafana_datasources_config:
    file: ./infrastructure/grafana/provisioning/datasources/datasources.yml

services:
  albiberto:
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - ${ALBIBERTO_EXTERNAL_PORT-5000}:${ALBIBERTO_INTERNAL_PORT-80}
 
  postgres:
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT-5432}:${POSTGRES_PORT-5432}

  postgres-exporter:
    ports:
      - ${POSTGRES_EXPORTER_PORT-9187}:${POSTGRES_EXPORTER_PORT-9187}
    environment:
      DATA_SOURCE_NAME: ${DATA_SOURCE_NAME}

  loki:
    ports:
      - ${LOKI_PORT-3100}:${LOKI_PORT-3100}
    configs:
      - source: loki_config
        target: /mnt/config/loki-config.yml
    command: -config.file=/mnt/config/loki-config.yml

  grafana:
    ports:
      - ${GRAFANA_PORT-3000}:${GRAFANA_PORT-3000}
    configs:
      - source: grafana_config
        target: /etc/grafana/grafana.ini
      - source: grafana_datasources_config
        target: /etc/grafana/provisioning/datasources/datasources.yml
    volumes:
      - grafana_data:/var/lib/grafana                                                         # Storage Grafana's data
      - ./infrastructure/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards # Initialize Grafana dashboards

  node-exporter:
    ports:
      - ${NODE_EXPORTER_PORT-9100}:${NODE_EXPORTER_PORT-9100}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  prometheus:
    ports:
      - ${PROMETHEUS_PORT-9090}:${PROMETHEUS_PORT-9090}
    volumes:
      - prometheus_data:/prometheus  
    configs:
      - source: prometheus_config
        target: /mnt/config/prometheus-config.yml
      - source: prometheus_alert_rules_config
        target: /mnt/config/alert-rules.yml
    command:
      - '--config.file=/mnt/config/prometheus-config.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
 
  alert-manager:
    ports:
      - ${ALERTMANAGER_PORT-9093}:${ALERT_MANAGER_PORT-9093}
    volumes:
      - alert-manager_data:/data
    command: --config.file=/mnt/config/alert-manager-config.yml --log.level=debug
    configs:
      - source: alert-manager_config
        target: /mnt/config/alert-manager-config.yml
